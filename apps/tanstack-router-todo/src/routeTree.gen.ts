/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RealtimePushImport } from './routes/realtime-push'
import { Route as RealtimeImport } from './routes/realtime'
import { Route as ReactivityPlayImport } from './routes/reactivity-play'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const RealtimePushRoute = RealtimePushImport.update({
  path: '/realtime-push',
  getParentRoute: () => rootRoute,
} as any)

const RealtimeRoute = RealtimeImport.update({
  path: '/realtime',
  getParentRoute: () => rootRoute,
} as any)

const ReactivityPlayRoute = ReactivityPlayImport.update({
  path: '/reactivity-play',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/reactivity-play': {
      id: '/reactivity-play'
      path: '/reactivity-play'
      fullPath: '/reactivity-play'
      preLoaderRoute: typeof ReactivityPlayImport
      parentRoute: typeof rootRoute
    }
    '/realtime': {
      id: '/realtime'
      path: '/realtime'
      fullPath: '/realtime'
      preLoaderRoute: typeof RealtimeImport
      parentRoute: typeof rootRoute
    }
    '/realtime-push': {
      id: '/realtime-push'
      path: '/realtime-push'
      fullPath: '/realtime-push'
      preLoaderRoute: typeof RealtimePushImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/reactivity-play': typeof ReactivityPlayRoute
  '/realtime': typeof RealtimeRoute
  '/realtime-push': typeof RealtimePushRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/reactivity-play': typeof ReactivityPlayRoute
  '/realtime': typeof RealtimeRoute
  '/realtime-push': typeof RealtimePushRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/reactivity-play': typeof ReactivityPlayRoute
  '/realtime': typeof RealtimeRoute
  '/realtime-push': typeof RealtimePushRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/reactivity-play' | '/realtime' | '/realtime-push'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/reactivity-play' | '/realtime' | '/realtime-push'
  id: '__root__' | '/' | '/reactivity-play' | '/realtime' | '/realtime-push'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReactivityPlayRoute: typeof ReactivityPlayRoute
  RealtimeRoute: typeof RealtimeRoute
  RealtimePushRoute: typeof RealtimePushRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReactivityPlayRoute: ReactivityPlayRoute,
  RealtimeRoute: RealtimeRoute,
  RealtimePushRoute: RealtimePushRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/reactivity-play",
        "/realtime",
        "/realtime-push"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/reactivity-play": {
      "filePath": "reactivity-play.tsx"
    },
    "/realtime": {
      "filePath": "realtime.tsx"
    },
    "/realtime-push": {
      "filePath": "realtime-push.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
